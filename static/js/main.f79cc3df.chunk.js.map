{"version":3,"sources":["components/Todos/TodoItem.js","components/Todos/Todos.js","components/Todos/AddTodo.js","components/App/Header.js","components/App/TodoUtil.js","components/App/App.js","index.js"],"names":["TodoItem","props","todo","id","title","completed","created","className","type","defaultChecked","onChange","toggleCompletion","onClick","deleteTodo","renderTodos","todos","map","elem","Todos","emptyState","AddTodo","useState","state","setState","onSubmit","e","preventDefault","addTodo","submitState","name","placeholder","value","autoComplete","target","Header","retrieveTodos","lastId","text","sep","i","item","localStorage","getItem","toString","data","split","push","join","getCurrentDate","today","Date","dd","String","getDate","padStart","getMonth","getFullYear","App","initId","parseInt","Number","MAX_SAFE_INTEGER","clear","retrieveId","useEffect","setItem","forEach","storeState","toggleTodo","removeItem","filter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f79cc3df.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\r\n\r\nimport \"./TodoItem.css\";\r\n\r\nconst TodoItem = (props) => {\r\n  const { id, title, completed, created } = props.todo;\r\n\r\n  return (\r\n    <div className={completed ? \"todo todo-done\" : \"todo\"}>\r\n      <p>\r\n        <input\r\n          type=\"checkbox\"\r\n          defaultChecked={completed}\r\n          onChange={() => props.toggleCompletion(id)}\r\n        />{\" \"}\r\n        {title} <span className=\"date\"> {created}</span>\r\n        <button className=\"delete-btn\" onClick={() => props.deleteTodo(id)}>\r\n          delete\r\n        </button>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nTodoItem.propTypes = {\r\n  todo: PropTypes.object.isRequired,\r\n  toggleCompletion: PropTypes.func.isRequired,\r\n  deleteTodo: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default TodoItem;\r\n","import TodoItem from \"./TodoItem\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst renderTodos = (props) =>\r\n  props.todos.map((elem) => {\r\n    return (\r\n      <TodoItem\r\n        key={elem.id}\r\n        todo={elem}\r\n        toggleCompletion={(id) => props.toggleCompletion(id)}\r\n        deleteTodo={(id) => props.deleteTodo(id)}\r\n      />\r\n    );\r\n  });\r\n\r\nconst Todos = (props) => {\r\n  return <div>{renderTodos(props)}</div>;\r\n};\r\n\r\nTodos.propTypes = {\r\n  todos: PropTypes.array.isRequired,\r\n  toggleCompletion: PropTypes.func.isRequired,\r\n  deleteTodo: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Todos;\r\n","import { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./AddTodo.css\";\r\n\r\nconst emptyState = {\r\n  title: \"\",\r\n};\r\n\r\nconst submitState = (props, elem, { title }) => {\r\n  elem.preventDefault();\r\n  props.addTodo(title);\r\n\r\n  return emptyState;\r\n};\r\n\r\nconst updateState = (target) => {\r\n  return { [target.name]: target.value };\r\n};\r\n\r\nconst AddTodo = (props) => {\r\n  const [state, setState] = useState(emptyState);\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={(e) => setState(submitState(props, e, state))}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"title\"\r\n          placeholder=\"New todo...\"\r\n          className=\"add-text\"\r\n          value={state.title}\r\n          autoComplete=\"false\"\r\n          onChange={(e) => setState(updateState(e.target))}\r\n        />\r\n        <input type=\"submit\" value=\"Add\" className=\"add-btn\" />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nAddTodo.propTypes = {\r\n  addTodo: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default AddTodo;\r\n","import \"./Header.css\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header>\r\n      <h1>Todo List</h1>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","export const retrieveId = () => {\r\n  const lastId = parseInt(localStorage.getItem(\"lastId\"));\r\n\r\n  if (lastId >= Number.MAX_SAFE_INTEGER) {\r\n    localStorage.clear();\r\n    return 0;\r\n  }\r\n\r\n  return lastId;\r\n};\r\n\r\nconst tokenizeText = (text, sep) => text.split(\" \").join(sep);\r\nconst untokenizeText = (text, sep) => text.split(sep).join(\" \");\r\n\r\nexport const retrieveTodos = (lastId) => {\r\n  const todos = [];\r\n  for (let i = 1; i <= lastId; i++) {\r\n    const item = localStorage.getItem(i.toString());\r\n\r\n    if (item) {\r\n      const data = item.split(\" \");\r\n\r\n      todos.push({\r\n        id: i,\r\n        title: untokenizeText(data[0], \"~\"),\r\n        completed: data[1] === \"true\",\r\n        created: data[2],\r\n      });\r\n    }\r\n  }\r\n\r\n  return todos;\r\n};\r\n\r\nexport const storeState = ({ lastId, todos }) => {\r\n  localStorage.setItem(\"lastId\", lastId);\r\n\r\n  todos.forEach(({ id, title, completed, created }) =>\r\n    localStorage.setItem(\r\n      id.toString(),\r\n      `${tokenizeText(title, \"~\")} ${completed} ${created}`\r\n    )\r\n  );\r\n};\r\n\r\nexport const getCurrentDate = () => {\r\n  const today = new Date();\r\n  const dd = String(today.getDate()).padStart(2, \"0\");\r\n  const mm = String(today.getMonth() + 1).padStart(2, \"0\");\r\n  return mm + \"/\" + dd + \"/\" + today.getFullYear();\r\n};\r\n","import { useState, useEffect } from \"react\";\n\nimport Todos from \"../Todos/Todos\";\nimport AddTodo from \"../Todos/AddTodo\";\nimport Header from \"./Header\";\n\nimport {\n  retrieveId,\n  retrieveTodos,\n  storeState,\n  getCurrentDate,\n} from \"./TodoUtil\";\n\nimport \"./App.css\";\n\nconst toggleTodo = (state, id) => {\n  return {\n    todos: state.todos.map((elem) => {\n      if (elem.id === id) {\n        elem.completed = !elem.completed;\n      }\n\n      return elem;\n    }),\n    lastId: state.lastId,\n  };\n};\n\nconst deleteTodo = (state, id) => {\n  localStorage.removeItem(id.toString());\n\n  return {\n    todos: state.todos.filter((elem) => elem.id !== id),\n    lastId: state.lastId,\n  };\n};\n\nconst addTodo = (state, title) => {\n  return {\n    todos: [\n      ...state.todos,\n      {\n        id: state.lastId + 1,\n        title: title,\n        completed: false,\n        created: getCurrentDate(),\n      },\n    ],\n    lastId: state.lastId + 1,\n  };\n};\n\nconst App = () => {\n  const initId = retrieveId();\n\n  const [state, setState] = useState({\n    lastId: initId,\n    todos: retrieveTodos(initId),\n  });\n\n  useEffect(() => storeState(state), [state]);\n\n  return (\n    <div>\n      <Header />\n      <div className=\"container\">\n        <Todos\n          todos={state.todos}\n          toggleCompletion={(id) => setState(toggleTodo(state, id))}\n          deleteTodo={(id) => setState(deleteTodo(state, id))}\n        />\n      </div>\n      <footer>\n        <AddTodo addTodo={(title) => setState(addTodo(state, title))} />\n      </footer>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}